{"ast":null,"code":"export default {\n  data() {\n    return {\n      phoneNumber: '',\n      password: '',\n      showSuccessMessage: false,\n      successMessage: ''\n    };\n  },\n  methods: {\n    register() {\n      // 檢查是否為電話號碼\n      if (!this.isValidPhoneNumber(this.phoneNumber)) {\n        alert('請輸入有效的電話號碼');\n        return;\n      }\n\n      // 檢查是否輸入密碼\n      if (!this.password) {\n        alert('請輸入密碼');\n        return;\n      }\n\n      // 模擬註冊成功\n      // 實際情況下，這裡應該是向後端發送註冊請求\n      // 然後根據後端的回應來顯示註冊成功或失敗的消息\n      this.showSuccessMessage = true;\n      this.successMessage = '註冊成功';\n      // 停留在APP畫面\n      setTimeout(() => {\n        this.showSuccessMessage = false;\n        this.successMessage = '';\n      }, 3000);\n    },\n    isValidPhoneNumber(phoneNumber) {\n      // 這裡可以根據你的需求添加更多的電話號碼驗證邏輯\n      // 現在的範例只檢查是否為10位數字\n      return /^\\d{10}$/.test(phoneNumber);\n    }\n  }\n};","map":{"version":3,"names":["data","phoneNumber","password","showSuccessMessage","successMessage","methods","register","isValidPhoneNumber","alert","setTimeout","test"],"sources":["src/components/RegisterCom.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>Register</h2>\r\n    <input type=\"text\" v-model=\"phoneNumber\" placeholder=\"Enter phone number\">\r\n    <input type=\"password\" v-model=\"password\" placeholder=\"Enter password\">\r\n    <button @click=\"register\">Register</button>\r\n    <div v-if=\"showSuccessMessage\">{{ successMessage }}</div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      phoneNumber: '',\r\n      password: '',\r\n      showSuccessMessage: false,\r\n      successMessage: ''\r\n    };\r\n  },\r\n  methods: {\r\n    register() {\r\n      // 檢查是否為電話號碼\r\n      if (!this.isValidPhoneNumber(this.phoneNumber)) {\r\n        alert('請輸入有效的電話號碼');\r\n        return;\r\n      }\r\n\r\n      // 檢查是否輸入密碼\r\n      if (!this.password) {\r\n        alert('請輸入密碼');\r\n        return;\r\n      }\r\n\r\n      // 模擬註冊成功\r\n      // 實際情況下，這裡應該是向後端發送註冊請求\r\n      // 然後根據後端的回應來顯示註冊成功或失敗的消息\r\n      this.showSuccessMessage = true;\r\n      this.successMessage = '註冊成功';\r\n      // 停留在APP畫面\r\n      setTimeout(() => {\r\n        this.showSuccessMessage = false;\r\n        this.successMessage = '';\r\n      }, 3000);\r\n    },\r\n    isValidPhoneNumber(phoneNumber) {\r\n      // 這裡可以根據你的需求添加更多的電話號碼驗證邏輯\r\n      // 現在的範例只檢查是否為10位數字\r\n      return /^\\d{10}$/.test(phoneNumber);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n/* CSS樣式可以在這裡添加 */\r\n</style>\r\n"],"mappings":"AAWA;EACAA,KAAA;IACA;MACAC,WAAA;MACAC,QAAA;MACAC,kBAAA;MACAC,cAAA;IACA;EACA;EACAC,OAAA;IACAC,SAAA;MACA;MACA,UAAAC,kBAAA,MAAAN,WAAA;QACAO,KAAA;QACA;MACA;;MAEA;MACA,UAAAN,QAAA;QACAM,KAAA;QACA;MACA;;MAEA;MACA;MACA;MACA,KAAAL,kBAAA;MACA,KAAAC,cAAA;MACA;MACAK,UAAA;QACA,KAAAN,kBAAA;QACA,KAAAC,cAAA;MACA;IACA;IACAG,mBAAAN,WAAA;MACA;MACA;MACA,kBAAAS,IAAA,CAAAT,WAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}