{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-142d2ef7\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h1\", null, \"社媒頁面\", -1 /* HOISTED */));\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"建立貼文：\", -1 /* HOISTED */));\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Post\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h2\", null, \"所有貼文\", -1 /* HOISTED */));\nconst _hoisted_5 = [\"onSubmit\"];\nconst _hoisted_6 = [\"onUpdate:modelValue\"];\nconst _hoisted_7 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"Comment\", -1 /* HOISTED */));\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"div\", null, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[1] || (_cache[1] = _withModifiers((...args) => $options.createPost && $options.createPost(...args), [\"prevent\"]))\n  }, [_withDirectives(_createElementVNode(\"textarea\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.newPostContent = $event),\n    placeholder: \"你在想什麼?\",\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.newPostContent]]), _hoisted_3], 32 /* NEED_HYDRATION */)]), _createElementVNode(\"div\", null, [_hoisted_4, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.posts, post => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: post.postId,\n      class: \"post\"\n    }, [_createElementVNode(\"p\", null, _toDisplayString(post.content), 1 /* TEXT */), _createElementVNode(\"p\", null, \"貼文者: \" + _toDisplayString(post.userName) + \" 建立於: \" + _toDisplayString(post.createdAt), 1 /* TEXT */), _createCommentVNode(\" 獨立的 comment 输入框 \"), _createElementVNode(\"form\", {\n      onSubmit: _withModifiers($event => $options.addComment(post), [\"prevent\"])\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"text\",\n      \"onUpdate:modelValue\": $event => post.newCommentContent = $event,\n      placeholder: \"Add a comment\",\n      required: \"\"\n    }, null, 8 /* PROPS */, _hoisted_6), [[_vModelText, post.newCommentContent]]), _hoisted_7], 40 /* PROPS, NEED_HYDRATION */, _hoisted_5), _createCommentVNode(\" 顯示该 post 的 comments \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(post.comments, comment => {\n      return _openBlock(), _createElementBlock(\"div\", {\n        key: comment.commentId,\n        class: \"comment\"\n      }, [_createElementVNode(\"p\", null, _toDisplayString(comment.content), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Commented by: \" + _toDisplayString(comment.userName), 1 /* TEXT */), _createElementVNode(\"p\", null, \"Commented at: \" + _toDisplayString(comment.createdAt), 1 /* TEXT */)]);\n    }), 128 /* KEYED_FRAGMENT */))]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementVNode","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","_withModifiers","args","$options","createPost","$event","$data","newPostContent","placeholder","required","_hoisted_3","_hoisted_4","_Fragment","_renderList","posts","post","key","postId","class","_toDisplayString","content","userName","createdAt","_createCommentVNode","addComment","newCommentContent","_hoisted_6","_hoisted_7","_hoisted_5","comments","comment","commentId"],"sources":["/Users/alan/Desktop/social-platform/frontend/src/components/SocialMedia.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>社媒頁面</h1>\n    <div>\n      <h2>建立貼文：</h2>\n      <form @submit.prevent=\"createPost\">\n        <textarea v-model=\"newPostContent\" placeholder=\"你在想什麼?\" required></textarea>\n        <button type=\"submit\">Post</button>\n      </form>\n    </div>\n    <div>\n      <h2>所有貼文</h2>\n      <div v-for=\"post in posts\" :key=\"post.postId\" class=\"post\">\n        <p>{{ post.content }}</p>\n        <p>貼文者: {{ post.userName }} 建立於: {{ post.createdAt }}</p>\n        <!-- 獨立的 comment 输入框 -->\n        <form @submit.prevent=\"addComment(post)\">\n          <input type=\"text\" v-model=\"post.newCommentContent\" placeholder=\"Add a comment\" required>\n          <button type=\"submit\">Comment</button>\n        </form>\n        <!-- 顯示该 post 的 comments -->\n        <div v-for=\"comment in post.comments\" :key=\"comment.commentId\" class=\"comment\">\n          <p>{{ comment.content }}</p>\n          <p>Commented by: {{ comment.userName }}</p>\n          <p>Commented at: {{ comment.createdAt }}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      newPostContent: '',\n      posts: [],\n      userId: null,\n    };\n  },\n  created() {\n    this.fetchPosts();\n    // 从本地存储中获取 userId\n    this.userId = this.$route.query.userId;\n  },\n  methods: {\n    createPost() {\n      const newPost = {\n        content: this.newPostContent,\n        userId: this.userId, // 使用当前用户的 userId\n        comments: [],\n        createdAt: new Date().toISOString().slice(0, 19).replace('T', ' ')\n      };\n      axios.post('http://localhost:8787/api/posts', newPost)\n        .then(() => {\n          this.fetchPosts(); // 提交帖子后重新获取帖子列表\n          this.newPostContent = '';\n        })\n        .catch(error => {\n          console.error('Error creating post:', error);\n        });\n    },\n    addComment(post) {\n        const newComment = {\n          content: post.newCommentContent,\n          userId: this.userId, // 使用当前用户的 userId\n          createdAt: new Date().toISOString().slice(0, 19).replace('T', ' '),\n          postId: post.postId\n        };\n        axios.post(`http://localhost:8787/api/posts/${post.postId}/comments`, newComment)\n          .then(() => {\n            this.fetchPosts(); // 提交评论后重新获取帖子列表\n            post.newCommentContent = ''; // 清空评论输入框\n          })\n          .catch(error => {\n            console.error('Error adding comment:', error);\n          });\n    },\n    fetchPosts() {\n      axios.get('http://localhost:8787/api/posts')\n        .then(response => {\n          this.posts = response.data.reverse(); // 反转顺序\n          // 为每个 post 添加一个新评论的属性\n          this.posts.forEach(post => {\n            post.newCommentContent = ''; // 为每个帖子添加评论输入框内容属性\n          });\n        })\n        .catch(error => {\n          console.error('Error fetching posts:', error);\n        });\n    }\n  }\n};\n</script>\n\n<style scoped>\n.post {\n  border: 1px solid #ccc;\n  padding: 10px;\n  margin-bottom: 10px;\n}\n.comment {\n  margin-left: 20px;\n  border-top: 1px solid #eee;\n  padding-top: 5px;\n}\n</style>\n"],"mappings":";;gEAEIA,mBAAA,CAAa,YAAT,MAAI;gEAENA,mBAAA,CAAc,YAAV,OAAK;gEAGPA,mBAAA,CAAmC;EAA3BC,IAAI,EAAC;AAAQ,GAAC,MAAI;gEAI5BD,mBAAA,CAAa,YAAT,MAAI;mBAXd;mBAAA;gEAkBUA,mBAAA,CAAsC;EAA9BC,IAAI,EAAC;AAAQ,GAAC,SAAO;;uBAjBrCC,mBAAA,CA2BM,cA1BJC,UAAa,EACbH,mBAAA,CAMM,cALJI,UAAc,EACdJ,mBAAA,CAGO;IAHAK,QAAM,EAAAC,MAAA,QAAAA,MAAA,MALnBC,cAAA,KAAAC,IAAA,KAK6BC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;sBAC/BR,mBAAA,CAA4E;IANpF,uBAAAM,MAAA,QAAAA,MAAA,MAAAK,MAAA,IAM2BC,KAAA,CAAAC,cAAc,GAAAF,MAAA;IAAEG,WAAW,EAAC,QAAQ;IAACC,QAAQ,EAAR;iDAArCH,KAAA,CAAAC,cAAc,E,GACjCG,UAAmC,C,8BAGvChB,mBAAA,CAiBM,cAhBJiB,UAAa,G,kBACbf,mBAAA,CAcMgB,SAAA,QA1BZC,WAAA,CAY0BP,KAAA,CAAAQ,KAAK,EAAbC,IAAI;yBAAhBnB,mBAAA,CAcM;MAdsBoB,GAAG,EAAED,IAAI,CAACE,MAAM;MAAEC,KAAK,EAAC;QAClDxB,mBAAA,CAAyB,WAAAyB,gBAAA,CAAnBJ,IAAI,CAACK,OAAO,kBAClB1B,mBAAA,CAAyD,WAAtD,OAAK,GAAAyB,gBAAA,CAAGJ,IAAI,CAACM,QAAQ,IAAG,QAAM,GAAAF,gBAAA,CAAGJ,IAAI,CAACO,SAAS,kBAClDC,mBAAA,qBAAwB,EACxB7B,mBAAA,CAGO;MAHAK,QAAM,EAhBrBE,cAAA,CAAAI,MAAA,IAgB+BF,QAAA,CAAAqB,UAAU,CAACT,IAAI;wBACpCrB,mBAAA,CAAyF;MAAlFC,IAAI,EAAC,MAAM;MAjB5B,uBAAAU,MAAA,IAiBsCU,IAAI,CAACU,iBAAiB,GAAApB,MAAA;MAAEG,WAAW,EAAC,eAAe;MAACC,QAAQ,EAAR;4BAjB1FiB,UAAA,I,cAiBsCX,IAAI,CAACU,iBAAiB,E,GAClDE,UAAsC,C,kCAlBhDC,UAAA,GAoBQL,mBAAA,yBAA4B,G,kBAC5B3B,mBAAA,CAIMgB,SAAA,QAzBdC,WAAA,CAqB+BE,IAAI,CAACc,QAAQ,EAAxBC,OAAO;2BAAnBlC,mBAAA,CAIM;QAJiCoB,GAAG,EAAEc,OAAO,CAACC,SAAS;QAAEb,KAAK,EAAC;UACnExB,mBAAA,CAA4B,WAAAyB,gBAAA,CAAtBW,OAAO,CAACV,OAAO,kBACrB1B,mBAAA,CAA2C,WAAxC,gBAAc,GAAAyB,gBAAA,CAAGW,OAAO,CAACT,QAAQ,kBACpC3B,mBAAA,CAA4C,WAAzC,gBAAc,GAAAyB,gBAAA,CAAGW,OAAO,CAACR,SAAS,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}