{"ast":null,"code":"import axios from 'axios';\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      name: '',\n      registerMessage: '' // 用於顯示註冊結果消息\n    };\n  },\n  methods: {\n    limitInputLength(event) {\n      if (event.target.value.length > 10) {\n        event.target.value = event.target.value.slice(0, 10);\n      }\n      this.username = event.target.value;\n    },\n    async register() {\n      // 檢查電話號碼是否為十個數字\n      if (!/^\\d{10}$/.test(this.username)) {\n        alert('請輸入有效的手機號碼作為帳號');\n        return;\n      }\n      try {\n        const response = await axios.post('http://localhost:8787/register', {\n          userPhone: this.username,\n          // 確保這裡是 userPhone\n          password: this.password,\n          userName: this.name\n        });\n        if (response.status === 200) {\n          this.registerMessage = '註冊成功，請以您的手機號碼與密碼登入';\n        }\n      } catch (error) {\n        console.error('註冊失敗', error);\n        if (error.response) {\n          // 根據後端返回的狀態碼顯示具體的錯誤訊息\n          if (error.response.status === 409) {\n            this.registerMessage = '註冊失敗：帳號已存在';\n          } else if (error.response.status === 400) {\n            this.registerMessage = '註冊失敗：請檢查輸入的資料';\n          } else {\n            this.registerMessage = '註冊失敗，請稍後再試';\n          }\n        } else {\n          this.registerMessage = '註冊失敗，請檢查網路連線';\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","data","username","password","name","registerMessage","methods","limitInputLength","event","target","value","length","slice","register","test","alert","response","post","userPhone","userName","status","error","console"],"sources":["/Users/alan/Desktop/social-platform/frontend/src/components/RegisterUser.vue"],"sourcesContent":["<template>\n  <div>\n    <h2>未申請帳號請註冊</h2>\n    <form @submit.prevent=\"register\">\n      <label for=\"username\">手機號碼:</label>\n      <input\n        type=\"text\"\n        id=\"username\"\n        v-model=\"username\"\n        placeholder=\"申請新帳號限定為手機號碼\"\n        maxlength=\"10\"\n        @input=\"limitInputLength\"\n        required\n      />\n      <label for=\"password\">密碼:</label>\n      <input type=\"password\" id=\"password\" v-model=\"password\" required />\n      <label for=\"name\">您的暱稱:</label>\n      <input type=\"text\" id=\"name\" v-model=\"name\" required />\n      <button type=\"submit\">註冊</button>\n    </form>\n    <div v-if=\"registerMessage\">{{ registerMessage }}</div>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\n\nexport default {\n  data() {\n    return {\n      username: '',\n      password: '',\n      name: '',\n      registerMessage: '', // 用於顯示註冊結果消息\n    };\n  },\n  methods: {\n    limitInputLength(event) {\n      if (event.target.value.length > 10) {\n        event.target.value = event.target.value.slice(0, 10);\n      }\n      this.username = event.target.value;\n    },\n    async register() {\n      // 檢查電話號碼是否為十個數字\n      if (!/^\\d{10}$/.test(this.username)) {\n        alert('請輸入有效的手機號碼作為帳號');\n        return;\n      }\n\n      try {\n        const response = await axios.post('http://localhost:8787/register', {\n          userPhone: this.username, // 確保這裡是 userPhone\n          password: this.password,\n          userName: this.name,\n        });\n\n        if (response.status === 200) {\n          this.registerMessage = '註冊成功，請以您的手機號碼與密碼登入';\n        }\n      } catch (error) {\n        console.error('註冊失敗', error);\n        if (error.response) {\n          // 根據後端返回的狀態碼顯示具體的錯誤訊息\n          if (error.response.status === 409) {\n            this.registerMessage = '註冊失敗：帳號已存在';\n          } else if (error.response.status === 400) {\n            this.registerMessage = '註冊失敗：請檢查輸入的資料';\n          } else {\n            this.registerMessage = '註冊失敗，請稍後再試';\n          }\n        } else {\n          this.registerMessage = '註冊失敗，請檢查網路連線';\n        }\n      }\n    },\n  },\n};\n</script>\n"],"mappings":"AAyBA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,EAAE;MACRC,eAAe,EAAE,EAAE,CAAE;IACvB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACPC,gBAAgBA,CAACC,KAAK,EAAE;MACtB,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,CAACC,MAAK,GAAI,EAAE,EAAE;QAClCH,KAAK,CAACC,MAAM,CAACC,KAAI,GAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAACE,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC;MACtD;MACA,IAAI,CAACV,QAAO,GAAIM,KAAK,CAACC,MAAM,CAACC,KAAK;IACpC,CAAC;IACD,MAAMG,QAAQA,CAAA,EAAG;MACf;MACA,IAAI,CAAC,UAAU,CAACC,IAAI,CAAC,IAAI,CAACZ,QAAQ,CAAC,EAAE;QACnCa,KAAK,CAAC,gBAAgB,CAAC;QACvB;MACF;MAEA,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMhB,KAAK,CAACiB,IAAI,CAAC,gCAAgC,EAAE;UAClEC,SAAS,EAAE,IAAI,CAAChB,QAAQ;UAAE;UAC1BC,QAAQ,EAAE,IAAI,CAACA,QAAQ;UACvBgB,QAAQ,EAAE,IAAI,CAACf;QACjB,CAAC,CAAC;QAEF,IAAIY,QAAQ,CAACI,MAAK,KAAM,GAAG,EAAE;UAC3B,IAAI,CAACf,eAAc,GAAI,oBAAoB;QAC7C;MACF,EAAE,OAAOgB,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,MAAM,EAAEA,KAAK,CAAC;QAC5B,IAAIA,KAAK,CAACL,QAAQ,EAAE;UAClB;UACA,IAAIK,KAAK,CAACL,QAAQ,CAACI,MAAK,KAAM,GAAG,EAAE;YACjC,IAAI,CAACf,eAAc,GAAI,YAAY;UACrC,OAAO,IAAIgB,KAAK,CAACL,QAAQ,CAACI,MAAK,KAAM,GAAG,EAAE;YACxC,IAAI,CAACf,eAAc,GAAI,eAAe;UACxC,OAAO;YACL,IAAI,CAACA,eAAc,GAAI,YAAY;UACrC;QACF,OAAO;UACL,IAAI,CAACA,eAAc,GAAI,cAAc;QACvC;MACF;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}