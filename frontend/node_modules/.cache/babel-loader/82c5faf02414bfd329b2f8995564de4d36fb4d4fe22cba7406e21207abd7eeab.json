{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nexport default {\n  data() {\n    return {\n      newPostContent: '',\n      newComment: '',\n      posts: []\n    };\n  },\n  created() {\n    this.fetchPosts(); // 在组件创建时自动获取所有post数据\n  },\n  methods: {\n    createPost() {\n      // 假设每个 post 有唯一的 id 和 comments 数组\n      const newPost = {\n        content: this.newPostContent,\n        userName: 'Your Name',\n        // 这里可以替换为当前用户的用户名\n        comments: []\n      };\n      axios.post('/api/posts', newPost) // 发送POST请求保存新帖子到后端数据库\n      .then(response => {\n        this.posts.unshift(response.data); // 将新帖子添加到页面顶部\n        this.newPostContent = ''; // 清空输入框\n      }).catch(error => {\n        console.error('Error creating post:', error);\n      });\n    },\n    addComment(postId) {\n      const post = this.posts.find(p => p.postId === postId);\n      if (post) {\n        axios.post(`/api/posts/${postId}/comments`, {\n          content: this.newComment\n        }).then(response => {\n          post.comments.push(response.data); // 将新评论添加到评论数组中\n          this.newComment = ''; // 清空输入框\n        }).catch(error => {\n          console.error('Error adding comment:', error);\n        });\n      }\n    },\n    fetchPosts() {\n      axios.get('/api/posts').then(response => {\n        this.posts = response.data; // 将后端返回的所有post数据赋值给页面的posts数组\n      }).catch(error => {\n        console.error('Error fetching posts:', error);\n      });\n    }\n  }\n};","map":{"version":3,"names":["axios","data","newPostContent","newComment","posts","created","fetchPosts","methods","createPost","newPost","content","userName","comments","post","then","response","unshift","catch","error","console","addComment","postId","find","p","push","get"],"sources":["C:\\Users\\USER\\Desktop\\frontend\\src\\components\\SocialMedia.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Social Media Page</h2>\r\n      <div>\r\n        <h3>Create a Post</h3>\r\n        <form @submit.prevent=\"createPost\">\r\n          <textarea v-model=\"newPostContent\" placeholder=\"What's on your mind?\" required></textarea>\r\n          <button type=\"submit\">Post</button>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <h3>Posts</h3>\r\n        <div v-for=\"post in posts\" :key=\"post.postId\" class=\"post\">\r\n          <p>{{ post.content }}</p>\r\n          <p>Posted by: {{ post.userName }}</p> <!-- 显示用户名 -->\r\n          <form @submit.prevent=\"addComment(post.postId)\">\r\n            <input type=\"text\" v-model=\"newComment\" placeholder=\"Add a comment\" required>\r\n            <button type=\"submit\">Comment</button>\r\n          </form>\r\n          <div v-for=\"comment in post.comments\" :key=\"comment.commentId\" class=\"comment\">\r\n            <p>{{ comment.content }}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    data() {\r\n      return {\r\n        newPostContent: '',\r\n        newComment: '',\r\n        posts: []\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchPosts(); // 在组件创建时自动获取所有post数据\r\n    },\r\n    methods: {\r\n      createPost() {\r\n        // 假设每个 post 有唯一的 id 和 comments 数组\r\n        const newPost = {\r\n          content: this.newPostContent,\r\n          userName: 'Your Name', // 这里可以替换为当前用户的用户名\r\n          comments: []\r\n        };\r\n        axios.post('/api/posts', newPost) // 发送POST请求保存新帖子到后端数据库\r\n          .then(response => {\r\n            this.posts.unshift(response.data); // 将新帖子添加到页面顶部\r\n            this.newPostContent = ''; // 清空输入框\r\n          })\r\n          .catch(error => {\r\n            console.error('Error creating post:', error);\r\n          });\r\n      },\r\n      addComment(postId) {\r\n        const post = this.posts.find(p => p.postId === postId);\r\n        if (post) {\r\n          axios.post(`/api/posts/${postId}/comments`, { content: this.newComment })\r\n            .then(response => {\r\n              post.comments.push(response.data); // 将新评论添加到评论数组中\r\n              this.newComment = ''; // 清空输入框\r\n            })\r\n            .catch(error => {\r\n              console.error('Error adding comment:', error);\r\n            });\r\n        }\r\n      },\r\n      fetchPosts() {\r\n        axios.get('/api/posts')\r\n          .then(response => {\r\n            this.posts = response.data; // 将后端返回的所有post数据赋值给页面的posts数组\r\n          })\r\n          .catch(error => {\r\n            console.error('Error fetching posts:', error);\r\n          });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .post {\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n    margin-bottom: 10px;\r\n  }\r\n  .comment {\r\n    margin-left: 20px;\r\n    border-top: 1px solid #eee;\r\n    padding-top: 5px;\r\n  }\r\n  </style>\r\n  "],"mappings":";AA4BE,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,cAAc,EAAE,EAAE;MAClBC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,UAAU,CAAC,CAAC,EAAE;EACrB,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX;MACA,MAAMC,OAAM,GAAI;QACdC,OAAO,EAAE,IAAI,CAACR,cAAc;QAC5BS,QAAQ,EAAE,WAAW;QAAE;QACvBC,QAAQ,EAAE;MACZ,CAAC;MACDZ,KAAK,CAACa,IAAI,CAAC,YAAY,EAAEJ,OAAO,EAAE;MAAA,CAC/BK,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACX,KAAK,CAACY,OAAO,CAACD,QAAQ,CAACd,IAAI,CAAC,EAAE;QACnC,IAAI,CAACC,cAAa,GAAI,EAAE,EAAE;MAC5B,CAAC,EACAe,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C,CAAC,CAAC;IACN,CAAC;IACDE,UAAUA,CAACC,MAAM,EAAE;MACjB,MAAMR,IAAG,GAAI,IAAI,CAACT,KAAK,CAACkB,IAAI,CAACC,CAAA,IAAKA,CAAC,CAACF,MAAK,KAAMA,MAAM,CAAC;MACtD,IAAIR,IAAI,EAAE;QACRb,KAAK,CAACa,IAAI,CAAE,cAAaQ,MAAO,WAAU,EAAE;UAAEX,OAAO,EAAE,IAAI,CAACP;QAAW,CAAC,EACrEW,IAAI,CAACC,QAAO,IAAK;UAChBF,IAAI,CAACD,QAAQ,CAACY,IAAI,CAACT,QAAQ,CAACd,IAAI,CAAC,EAAE;UACnC,IAAI,CAACE,UAAS,GAAI,EAAE,EAAE;QACxB,CAAC,EACAc,KAAK,CAACC,KAAI,IAAK;UACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC/C,CAAC,CAAC;MACN;IACF,CAAC;IACDZ,UAAUA,CAAA,EAAG;MACXN,KAAK,CAACyB,GAAG,CAAC,YAAY,EACnBX,IAAI,CAACC,QAAO,IAAK;QAChB,IAAI,CAACX,KAAI,GAAIW,QAAQ,CAACd,IAAI,EAAE;MAC9B,CAAC,EACAgB,KAAK,CAACC,KAAI,IAAK;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACN;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}